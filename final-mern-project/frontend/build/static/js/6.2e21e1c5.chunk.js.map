{"version":3,"sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["mapboxgl","accessToken","process","Map","props","useState","setChangeLayer","mapContainerRef","useRef","useEffect","map","container","current","style","center","coordinates","lng","lat","zoom","on","e","document","getElementById","innerHTML","JSON","stringify","point","lngLat","wrap","Marker","setLngLat","addTo","addControl","NavigationControl","inputs","getElementsByTagName","switchLayer","layer","layerId","target","id","setStyle","i","length","onclick","remove","Fragment","className","ref","type","name","value","onChange","htmlFor","PlaceItem","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","showMap","setShowMap","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","a","Authorization","token","onDelete","closeMapHandler","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creator","to","PlaceList","items","place","key","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletePlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/6.2e21e1c5.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Map.css\";\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\nconst Map = (props) => {\n\n  const [setChangeLayer] = useState('');\n\n  const mapContainerRef = useRef(null);\n  \n  // initialize map when component mounts\n  useEffect(() => {\n\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      // See style options here: https://docs.mapbox.com/api/maps/#styles\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [props.coordinates.lng, props.coordinates.lat],\n      zoom: 12.5,\n    });\n\n    // e.point is the x, y coordinates of the mousemove event relative\n    // to the top-left corner of the map\n    // e.lngLat is the longitude, latitude geographical position of the event\n    map.on(\"mousemove\", function (e) {\n      document.getElementById(\"info\").innerHTML =\n        \"<br />\" + JSON.stringify(e.point) + JSON.stringify(e.lngLat.wrap());\n    });\n\n    new mapboxgl.Marker()\n      .setLngLat([props.coordinates.lng, props.coordinates.lat])\n      .addTo(map);\n\n    // add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), \"bottom-right\");\n\n    ////////\n\n    const layerList = document.getElementById('menu');\n    const inputs = layerList.getElementsByTagName('input');\n     \n    function switchLayer(layer) {\n    let layerId = layer.target.id;\n    map.setStyle('mapbox://styles/mapbox/' + layerId);\n    }\n     \n    for (let i = 0; i < inputs.length; i++) {\n    inputs[i].onclick = switchLayer;\n    }\n\n    ///////////\n\n\n\n    // clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <React.Fragment>\n      <pre id=\"info\"></pre>\n      <div className=\"map-container\" ref={mapContainerRef} />\n      <div id=\"menu\">\n        <input\n          id=\"streets-v11\"\n          type=\"radio\"\n          name=\"rtoggle\"\n          value=\"streets\"\n          onChange={(layer) => setChangeLayer(layer.target.value)}\n        />\n        <label htmlFor=\"streets-v11\">streets</label>\n        <input id=\"light-v10\" type=\"radio\" name=\"rtoggle\" value=\"light\" />\n        <label htmlFor=\"light-v10\">light</label>\n        <input id=\"dark-v10\" type=\"radio\" name=\"rtoggle\" value=\"dark\" />\n        <label htmlFor=\"dark-v10\">dark</label>\n        <input id=\"outdoors-v11\" type=\"radio\" name=\"rtoggle\" value=\"outdoors\" />\n        <label htmlFor=\"outdoors-v11\">outdoors</label>\n        <input\n          id=\"satellite-v9\"\n          type=\"radio\"\n          name=\"rtoggle\"\n          value=\"satellite\"\n        />\n        <label htmlFor=\"satellite-v9\">satellite</label>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport \"./PlaceItem.css\";\n\nconst PlaceItem = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [showMap, setShowMap] = useState(false);\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDelteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        \"DELETE\",\n        null,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const coordinates = props.coordinates;\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>Close</Button>}\n      >\n        <div className=\"map-container\">\n          <Map coordinates={coordinates} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that this\n          action is definitive, therefore you cannot undo it.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h2>{props.address}</h2>\n            <p>{props.description}</p>\n          </div>\n\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creator && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {auth.userId === props.creator && (\n              <Button danger onClick={showDelteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\n\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./PlaceList.css\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport PlaceItem from \"./PlaceItem\";\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No Places found. Create a place.</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creator={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n//import DPLACES from \"./DummyPlaces\";\n\n//const DUMMY_PLACES = DPLACES;\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeleteHandler = (deletePlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletePlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}